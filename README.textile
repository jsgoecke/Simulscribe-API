h1. Simulscribe API Consumer Example

h1. Overview

This project provides an example of how to create a client that may do a multi-part post of an audio file to the Simulscribe API. And then provide a server that handles the web callback capability of the Simulscribe API with the transcription results.

In this project example the client will create an entry in the database with a key and the filename. The server will then accept the results and update that table entry with the transcription result.

h1. Key files

h2. simulscribe_client.rb

This is the script that may be used to post a file with the appropriate configuration (config.yml). Usage is:

ruby simulscribe_client.rb /path/to/file/to/send

h2. simulscribe_server.rb

This is the Sinatra application that will be run by Nginx and your Rackup file (config.ru).

h1. Requirements

* Curb 0.4.4.0+
* Sinatra 0.9.2
* XmlSimple 1.0.12+
* SSL enabled HTTP server (Nginx Recommended)

h1. Examples

h2. Client send

<pre><code>
$ruby simulscribe_curl.rb transcription_test.mp3 

"Result: 200"
{"visibility-state"=>["inbox"], "message-queue-id"=>[{"type"=>"integer", "content"=>"2"}], "external-id"=>["1247524657"], "duration-ms"=>[{"type"=>"integer", "content"=>"8000"}], "deleted-at"=>[{"nil"=>"true", "type"=>"datetime"}], "truncated"=>[{"type"=>"boolean", "content"=>"false"}], "recognized-at"=>[{"nil"=>"true", "type"=>"datetime"}], "heard-at"=>[{"nil"=>"true", "type"=>"datetime"}], "checked-in-at"=>[{"nil"=>"true", "type"=>"datetime"}], "archived-at"=>[{"nil"=>"true", "type"=>"datetime"}], "requesting-host"=>["https://myip/receive_transcription"], "lock-version"=>[{"type"=>"integer", "content"=>"1"}], "created-at"=>[{"type"=>"datetime", "content"=>"2009-07-13T18:37:40-04:00"}], "sender"=>[{"nil"=>"true"}], "content-type"=>["audio/x-wav"], "tagline"=>[{"type"=>"boolean", "content"=>"true"}], "saved-at"=>[{"nil"=>"true", "type"=>"datetime"}], "id"=>[{"type"=>"integer", "content"=>"288313922"}], "file-name"=>["transcription_test.wav"], "checked-out-at"=>[{"nil"=>"true", "type"=>"datetime"}], "updated-at"=>[{"type"=>"datetime", "content"=>"2009-07-13T18:37:40-04:00"}], "external-user-id"=>[{"nil"=>"true"}], "account-id"=>[{"type"=>"integer", "content"=>"386383"}], "length"=>[{"type"=>"integer", "content"=>"60988"}], "email-reply-to"=>[{"nil"=>"true"}], "state"=>["recognizing"], "external-xml"=>[{"nil"=>"true"}]}
</code></pre>

h2. Result on the server

<pre><code>
	$ ruby simulscribe_server.rb 
	== Sinatra/0.9.2 has taken the stage on 4567 for development with backup from Mongrel
	"Incoming transcription request with: "
	{"trans-xml"=>[{"result"=>["transcribed"], "message"=>["This is a test of the transcription at U. P. i.."]}], "external-id"=>["1247524657"], "truncated"=>["false"], "audio-duration"=>["8"], "ss-id"=>["1111313222"], "metadata"=>[{}], "error-code"=>["0"], "external-xml"=>[{}]}
	"**************************************************"
	127.0.0.1 - - [13/Jul/2009 15:38:02] "POST /receive_transcription HTTP/1.0" 200 - 0.0548
</pre></code>

h1. Example Nginx SSL Config

<pre><code>
	 server {
	        listen 443;
	        server_name  mydomain;

	        ssl                  on;
	        ssl_certificate      /opt/nginx/ssl/server.crt;
	        ssl_certificate_key  /opt/nginx/ssl/server.key;
	        ssl_session_timeout  5m;            ssl_protocols  SSLv2 SSLv3 TLSv1;
	        ssl_ciphers  ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;
	        ssl_prefer_server_ciphers   on;

	        #charset koi8-r;

	        #access_log  logs/host.access.log  main;

	        location / {
				root /home/developer/development/simulscribe/public;
				passenger_enabled on;
	        }
	  }
</pre></code>